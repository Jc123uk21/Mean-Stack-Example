{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/security/auth-service.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/services/loading.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../spinner/spinner.component\";\nfunction LoginComponent_app_spinner_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-spinner\", 14);\n  }\n}\nfunction LoginComponent_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵtext(1, \"login\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder, authService, router, loadingService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n    this.loadingService = loadingService;\n    //variable to hold loading attribute value\n    this.loading = this.loadingService.loading;\n    //Create login form via new form group\n    this.loginForm = this.formBuilder.group({\n      username: '',\n      password: ''\n    });\n  }\n  ngOnInit() {\n    /*check if a user is logged in via the authentication service and initialize the variable\n       holding the logged in status attribute when this component is initialized\n    */\n    this.authService.getIsAuthenticated().subscribe({\n      next: res => {\n        this.isLoggedIn = res.valueOf();\n      }\n    });\n  }\n  onSubmit() {\n    this.authService.login(this.loginForm.get('username')?.getRawValue(), this.loginForm.get('password')?.getRawValue()).subscribe({\n      next: data => {\n        localStorage.setItem('token', data);\n        localStorage.setItem('username', this.loginForm.get('username')?.getRawValue());\n        console.log(localStorage.getItem('token'));\n        this.authService.setAuthenticated(data);\n        this.isLoggedIn = data.valueOf();\n        this.router.navigateByUrl(\"userHome\");\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.LoadingService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 22,\n  vars: 5,\n  consts: [[1, \"login-form\", \"background-primary\"], [1, \"container\"], [1, \"grid\"], [1, \"coffee-icon\"], [\"src\", \"./assets/icons/sign-up.png\", \"alt\", \"person icon\"], [1, \"card\", \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"email\", \"id\", \"username\", \"formControlName\", \"username\", \"minlength\", \"8\", \"maxlength\", \"20\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"minlength\", \"8\", \"maxlength\", \"20\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"background-primary text-center\", 4, \"ngIf\", \"ngIfElse\"], [\"elseBlock\", \"\"], [1, \"background-primary\", \"text-center\"], [\"type\", \"submit\", 1, \"btn\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(7, \"div\", 7)(8, \"label\", 8);\n      i0.ɵɵtext(9, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"br\")(11, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 10);\n      i0.ɵɵtext(14, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"br\")(16, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"br\");\n      i0.ɵɵtemplate(18, LoginComponent_app_spinner_18_Template, 1, 0, \"app-spinner\", 12);\n      i0.ɵɵpipe(19, \"async\");\n      i0.ɵɵtemplate(20, LoginComponent_ng_template_20_Template, 2, 0, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(21);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(19, 3, ctx.loading))(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MinLengthValidator, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i6.SpinnerComponent, i5.AsyncPipe],\n  styles: [\"\\n\\n.login-form[_ngcontent-%COMP%]{\\n\\n  height: 520px;\\n}\\n\\n.form[_ngcontent-%COMP%]{\\n  position: relative;\\n  top: 60px;\\n  height: 350px;\\n  width: 400px;\\n  padding: 40px;\\n  z-index: 100;\\n}\\n.grid[_ngcontent-%COMP%]{\\n  justify-content:center;\\n}\\n.login-form[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]{\\n  position: relative;\\n  justify-self: center;\\n  height: 280px;\\n  width: 400px;\\n}\\n\\n.coffee-icon[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{\\n  height: 330px;\\n  width: 370px;\\n  padding-left: 80px;\\n}\\n.btn[_ngcontent-%COMP%]{\\n  background-color: #c39bd3;\\n}\\n\\n\\n\\n@Media(max-width:500px){\\n  .login-form .container{\\n      height: 500px;\\n  }\\n  .login-form{\\n      height: auto;\\n      padding-bottom: 20px;\\n  }\\n  .card{\\n      max-height : 250px;\\n      margin-bottom: 50px;\\n  }\\n\\n}\\n\\n@Media(max-width:768px){\\n  .card{\\n      max-width: 350px;\\n      padding-top: 25px;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRCQUE0QjtBQUM1Qjs7RUFFRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsU0FBUztFQUNULGFBQWE7RUFDYixZQUFZO0VBQ1osYUFBYTtFQUNiLFlBQVk7QUFDZDtBQUNBO0VBQ0Usc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsb0JBQW9CO0VBQ3BCLGFBQWE7RUFDYixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsWUFBWTtFQUNaLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBLFNBQVM7QUFDVDtFQUNFO01BQ0ksYUFBYTtFQUNqQjtFQUNBO01BQ0ksWUFBWTtNQUNaLG9CQUFvQjtFQUN4QjtFQUNBO01BQ0ksa0JBQWtCO01BQ2xCLG1CQUFtQjtFQUN2Qjs7QUFFRjs7QUFFQTtFQUNFO01BQ0ksZ0JBQWdCO01BQ2hCLGlCQUFpQjtFQUNyQjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyphZGp1c3Qgc3R5bGVzIHRvIGVsZW1lbnRzKi9cclxuLmxvZ2luLWZvcm17XHJcblxyXG4gIGhlaWdodDogNTIwcHg7XHJcbn1cclxuXHJcbi5mb3Jte1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB0b3A6IDYwcHg7XHJcbiAgaGVpZ2h0OiAzNTBweDtcclxuICB3aWR0aDogNDAwcHg7XHJcbiAgcGFkZGluZzogNDBweDtcclxuICB6LWluZGV4OiAxMDA7XHJcbn1cclxuLmdyaWR7XHJcbiAganVzdGlmeS1jb250ZW50OmNlbnRlcjtcclxufVxyXG4ubG9naW4tZm9ybSAuY2FyZHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XHJcbiAgaGVpZ2h0OiAyODBweDtcclxuICB3aWR0aDogNDAwcHg7XHJcbn1cclxuXHJcbi5jb2ZmZWUtaWNvbiBpbWd7XHJcbiAgaGVpZ2h0OiAzMzBweDtcclxuICB3aWR0aDogMzcwcHg7XHJcbiAgcGFkZGluZy1sZWZ0OiA4MHB4O1xyXG59XHJcbi5idG57XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2MzOWJkMztcclxufVxyXG5cclxuLypNb2JpbGUqL1xyXG5ATWVkaWEobWF4LXdpZHRoOjUwMHB4KXtcclxuICAubG9naW4tZm9ybSAuY29udGFpbmVye1xyXG4gICAgICBoZWlnaHQ6IDUwMHB4O1xyXG4gIH1cclxuICAubG9naW4tZm9ybXtcclxuICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcclxuICB9XHJcbiAgLmNhcmR7XHJcbiAgICAgIG1heC1oZWlnaHQgOiAyNTBweDtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogNTBweDtcclxuICB9XHJcblxyXG59XHJcblxyXG5ATWVkaWEobWF4LXdpZHRoOjc2OHB4KXtcclxuICAuY2FyZHtcclxuICAgICAgbWF4LXdpZHRoOiAzNTBweDtcclxuICAgICAgcGFkZGluZy10b3A6IDI1cHg7XHJcbiAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","formBuilder","authService","router","loadingService","loading","loginForm","group","username","password","ngOnInit","getIsAuthenticated","subscribe","next","res","isLoggedIn","valueOf","onSubmit","login","get","getRawValue","data","localStorage","setItem","console","log","getItem","setAuthenticated","navigateByUrl","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","i4","LoadingService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_6_listener","ɵɵtemplate","LoginComponent_app_spinner_18_Template","LoginComponent_ng_template_20_Template","ɵɵtemplateRefExtractor","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","_r1"],"sources":["C:\\Users\\Georgie\\Desktop\\DevelopmentProjects\\FullStack\\MEAN\\movie4you\\frontend\\src\\app\\components\\login\\login.component.ts","C:\\Users\\Georgie\\Desktop\\DevelopmentProjects\\FullStack\\MEAN\\movie4you\\frontend\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/security/auth-service.service';\nimport { LoadingService } from 'src/app/services/loading.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n\n   //variable to hold attribute for users logged in status\n   isLoggedIn?: boolean;\n\n   //variable to hold loading attribute value\n   loading = this.loadingService.loading;\n\n   //Create login form via new form group\n   loginForm = this.formBuilder.group({\n    username: '',\n    password: ''\n   });\n\n   constructor(private formBuilder: FormBuilder, private authService: AuthService,\n    private router: Router, private loadingService: LoadingService){\n  }\n\n  ngOnInit(): void {\n    /*check if a user is logged in via the authentication service and initialize the variable\n       holding the logged in status attribute when this component is initialized\n    */\n    this.authService.getIsAuthenticated().subscribe({\n      next: res => {this.isLoggedIn = res.valueOf()}\n    });\n\n  }\n\n  onSubmit():void{\n    this.authService.login(this.loginForm.get('username')?.getRawValue(),\n    this.loginForm.get('password')?.getRawValue())\n    .subscribe({\n      next: data =>{\n        localStorage.setItem('token', data);\n        localStorage.setItem('username', this.loginForm.get('username')?.getRawValue());\n        console.log(localStorage.getItem('token'));\n        this.authService.setAuthenticated(data);\n        this.isLoggedIn = data.valueOf();\n        this.router.navigateByUrl(\"userHome\");\n      }\n    }\n    )\n  }\n\n}\n","<div class=\"login-form background-primary\">\n  <div class=\"container\">\n      <div class=\"grid\">\n          <div class=\"coffee-icon\">\n              <img src=\"./assets/icons/sign-up.png\" alt=\"person icon\">\n          </div>\n          <div class=\"card text-center\">\n              <form [formGroup] =\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                  <div class=\"form-group\">\n                      <label for=\"username\">Username</label><br>\n                      <input class = \"form-control\" type=\"email\" id=\"username\" formControlName=\"username\" minlength=\"8\"\n                          maxlength=\"20\" required>\n                  </div>\n                  <div class=\"form-group\">\n                      <label for=\"password\">Password</label><br>\n                      <input class = \"form-control\" type=\"password\" id=\"password\" formControlName=\"password\" minlength=\"8\"\n                          maxlength=\"20\" required>\n                  </div><br>\n\n                  <app-spinner class=\"background-primary text-center\" *ngIf=\"loading | async; else elseBlock \"></app-spinner>\n                  <ng-template #elseBlock>\n                      <button class=\"btn\" type=\"submit\">login</button>\n                  </ng-template>\n              </form>\n          </div>\n      </div>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}