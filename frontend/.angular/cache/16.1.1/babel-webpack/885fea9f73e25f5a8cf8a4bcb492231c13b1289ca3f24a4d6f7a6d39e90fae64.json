{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { User } from 'src/app/models/user';\nexport let RegistrationComponent = class RegistrationComponent {\n  constructor(authService, router, formBuilder) {\n    this.authService = authService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    //Set user logged in value to false\n    this.isLoggedIn = false;\n    //declare variable to hold submitted value for registration form\n    this.submitted = false;\n    //Create new user object to hold collected registration details\n    this.user = new User();\n  }\n  //Create onSubmit function for registration form submition\n  onSubmit() {\n    this.submitted = true;\n    //Create user from form inputs\n    this.user.firstname = this.form.get('firstName')?.getRawValue();\n    this.user.lastname = this.form.get('lastName')?.getRawValue();\n    this.user.username = this.form.get('username')?.getRawValue();\n    this.user.password = this.form.get('password')?.getRawValue();\n    this.user.roles = [\"USER\"];\n    this.authService.register(this.user).subscribe({\n      next: data => {\n        localStorage.setItem('username', this.form.get('username')?.getRawValue());\n        this.authService.setAuthenticated(data);\n        console.log(data);\n        this.router.navigateByUrl(\"userHome\");\n      }\n    });\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      password: \"\"\n    });\n  }\n};\nRegistrationComponent = __decorate([Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})], RegistrationComponent);","map":{"version":3,"names":["Component","User","RegistrationComponent","constructor","authService","router","formBuilder","isLoggedIn","submitted","user","onSubmit","firstname","form","get","getRawValue","lastname","username","password","roles","register","subscribe","next","data","localStorage","setItem","setAuthenticated","console","log","navigateByUrl","ngOnInit","group","firstName","lastName","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Georgie\\Desktop\\DevelopmentProjects\\FullStack\\MEAN\\movie4you\\frontend\\src\\app\\components\\registration\\registration.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user';\nimport { AuthService } from 'src/app/security/auth-service.service';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit{\n\n  //Set user logged in value to false\n  isLoggedIn: boolean = false;\n\n  //declare variable to hold submitted value for registration form\n  submitted: boolean = false;\n\n  //Create form group for registration form\n  form!: FormGroup;\n\n  //Create new user object to hold collected registration details\n  private user:User = new User();\n\n  constructor(private authService: AuthService, private router: Router,\n      private formBuilder: FormBuilder){\n  }\n\n\n  //Create onSubmit function for registration form submition\n  onSubmit(){\n    this.submitted = true;\n\n    //Create user from form inputs\n    this.user.firstname = this.form.get('firstName')?.getRawValue();\n    this.user.lastname = this.form.get('lastName')?.getRawValue();\n    this.user.username =this.form.get('username')?.getRawValue();\n    this.user.password =this.form.get('password')?.getRawValue();\n    this.user.roles =[\"USER\"];\n\n\n    this.authService.register(this.user)\n    .subscribe({\n        next: data=>{\n          localStorage.setItem('username', this.form.get('username')?.getRawValue());\n          this.authService.setAuthenticated(data);\n          console.log(data);\n          this.router.navigateByUrl(\"userHome\");\n        }\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group(\n      {\n        firstName:\"\",\n        lastName:\"\",\n        username:\"\",\n        password:\"\",\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAASC,IAAI,QAAQ,qBAAqB;AAUnC,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAchCC,YAAoBC,WAAwB,EAAUC,MAAc,EACxDC,WAAwB;IADhB,KAAAF,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAChD,KAAAC,WAAW,GAAXA,WAAW;IAbvB;IACA,KAAAC,UAAU,GAAY,KAAK;IAE3B;IACA,KAAAC,SAAS,GAAY,KAAK;IAK1B;IACQ,KAAAC,IAAI,GAAQ,IAAIR,IAAI,EAAE;EAI9B;EAGA;EACAS,QAAQA,CAAA;IACN,IAAI,CAACF,SAAS,GAAG,IAAI;IAErB;IACA,IAAI,CAACC,IAAI,CAACE,SAAS,GAAG,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,WAAW,CAAC,EAAEC,WAAW,EAAE;IAC/D,IAAI,CAACL,IAAI,CAACM,QAAQ,GAAG,IAAI,CAACH,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC,EAAEC,WAAW,EAAE;IAC7D,IAAI,CAACL,IAAI,CAACO,QAAQ,GAAE,IAAI,CAACJ,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC,EAAEC,WAAW,EAAE;IAC5D,IAAI,CAACL,IAAI,CAACQ,QAAQ,GAAE,IAAI,CAACL,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC,EAAEC,WAAW,EAAE;IAC5D,IAAI,CAACL,IAAI,CAACS,KAAK,GAAE,CAAC,MAAM,CAAC;IAGzB,IAAI,CAACd,WAAW,CAACe,QAAQ,CAAC,IAAI,CAACV,IAAI,CAAC,CACnCW,SAAS,CAAC;MACPC,IAAI,EAAEC,IAAI,IAAE;QACVC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,IAAI,CAACZ,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC,EAAEC,WAAW,EAAE,CAAC;QAC1E,IAAI,CAACV,WAAW,CAACqB,gBAAgB,CAACH,IAAI,CAAC;QACvCI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;QACjB,IAAI,CAACjB,MAAM,CAACuB,aAAa,CAAC,UAAU,CAAC;MACvC;KACD,CACF;EACH;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACjB,IAAI,GAAG,IAAI,CAACN,WAAW,CAACwB,KAAK,CAChC;MACEC,SAAS,EAAC,EAAE;MACZC,QAAQ,EAAC,EAAE;MACXhB,QAAQ,EAAC,EAAE;MACXC,QAAQ,EAAC;KACV,CACF;EACH;CACD;AArDYf,qBAAqB,GAAA+B,UAAA,EALjCjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWlC,qBAAqB,CAqDjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}