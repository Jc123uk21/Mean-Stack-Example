{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MovieService {\n  constructor(http) {\n    this.http = http;\n    this.restUri = \"http://127.0.0.1:27017/examples\";\n  }\n  //Get A list of all movies held within the database\n  getAllMovie() {\n    return this.http.get(this.restUri + \"/all\");\n  }\n  //Get a list of movies by their genre\n  getAllMoviesByGenre(genre) {\n    return this.http.get(this.restUri + '/:' + genre);\n  }\n  //Get a movie by its title\n  getMovieByTitle(title) {\n    return this.http.get(this.restUri + '/:' + title);\n  }\n  //Add a movie to database\n  AddNewMovie(movie) {\n    return this.http.post(this.restUri + \"/movie\", movie);\n  }\n}\nMovieService.ɵfac = function MovieService_Factory(t) {\n  return new (t || MovieService)(i0.ɵɵinject(i1.HttpClient));\n};\nMovieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MovieService,\n  factory: MovieService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["MovieService","constructor","http","restUri","getAllMovie","get","getAllMoviesByGenre","genre","getMovieByTitle","title","AddNewMovie","movie","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Georgie\\Desktop\\DevelopmentProjects\\FullStack\\MEAN\\movie4you\\frontend\\src\\app\\services\\movie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Movie } from '../models/movie';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n\n  private readonly restUri: string =\"http://127.0.0.1:27017/examples\";\n  constructor(private http: HttpClient) { }\n\n  //Get A list of all movies held within the database\n  getAllMovie():Observable<Movie[]>{\n    return this.http.get<Movie[]>(this.restUri +\"/all\");\n  }\n\n  //Get a list of movies by their genre\n  getAllMoviesByGenre(genre: string):Observable<Movie[]>{\n    return this.http.get<Movie[]>(this.restUri + '/:' + genre);\n  }\n\n  //Get a movie by its title\n  getMovieByTitle(title: string):Observable<Movie>{\n    return this.http.get<Movie>(this.restUri + '/:' + title);\n  }\n\n  //Add a movie to database\n  AddNewMovie(movie: Movie):Observable<any>{\n    return this.http.post(this.restUri + \"/movie\", movie);\n  }\n\n\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADP,KAAAC,OAAO,GAAU,iCAAiC;EAC3B;EAExC;EACAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,OAAO,GAAE,MAAM,CAAC;EACrD;EAEA;EACAG,mBAAmBA,CAACC,KAAa;IAC/B,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,OAAO,GAAG,IAAI,GAAGI,KAAK,CAAC;EAC5D;EAEA;EACAC,eAAeA,CAACC,KAAa;IAC3B,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAQ,IAAI,CAACF,OAAO,GAAG,IAAI,GAAGM,KAAK,CAAC;EAC1D;EAEA;EACAC,WAAWA,CAACC,KAAY;IACtB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,OAAO,GAAG,QAAQ,EAAEQ,KAAK,CAAC;EACvD;;AAvBWX,YAAY,C;mBAAZA,YAAY,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZhB,YAAY,C;SAAZA,YAAY;EAAAiB,OAAA,EAAZjB,YAAY,CAAAkB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}