{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MovieService {\n  constructor(http) {\n    this.http = http;\n    this.options = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.restUri = \"http://localhost:5000\";\n  }\n  //Get A list of all movies held within the database\n  getAllMovies() {\n    return this.http.get(this.restUri + \"/movie/all\", this.options);\n  }\n  //Get a list of movies by their genre\n  getAllMoviesByGenre(genre) {\n    return this.http.get(this.restUri + '/:' + genre);\n  }\n  //Get a movie by its title\n  getMovieByTitle(title) {\n    return this.http.get(this.restUri + '/:' + title);\n  }\n  //Add a movie to database\n  AddNewMovie(movie) {\n    return this.http.post(this.restUri + \"/movie/add\", movie, this.options);\n  }\n}\nMovieService.ɵfac = function MovieService_Factory(t) {\n  return new (t || MovieService)(i0.ɵɵinject(i1.HttpClient));\n};\nMovieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MovieService,\n  factory: MovieService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","MovieService","constructor","http","options","headers","restUri","getAllMovies","get","getAllMoviesByGenre","genre","getMovieByTitle","title","AddNewMovie","movie","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Georgie\\Desktop\\DevelopmentProjects\\FullStack\\MEAN\\movie4you\\frontend\\src\\app\\services\\movie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Movie } from '../models/movie';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { __await } from 'tslib';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n\n  private options = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  private readonly restUri: string =\"http://localhost:5000\";\n  constructor(private http: HttpClient) { }\n\n  //Get A list of all movies held within the database\n  getAllMovies():Observable<Movie[]>{\n    return this.http.get<Movie[]>(this.restUri +\"/movie/all\", this.options);\n  }\n\n  //Get a list of movies by their genre\n  getAllMoviesByGenre(genre: string):Observable<Movie[]>{\n    return this.http.get<Movie[]>(this.restUri + '/:' + genre);\n  }\n\n  //Get a movie by its title\n  getMovieByTitle(title: string):Observable<Movie>{\n    return this.http.get<Movie>(this.restUri + '/:' + title);\n  }\n\n  //Add a movie to database\n  AddNewMovie(movie: Movie):Observable<any>{\n    return this.http.post(this.restUri + \"/movie/add\", movie, this.options);\n  }\n\n\n}\n"],"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAO9D,OAAM,MAAOC,YAAY;EAOvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALhB,KAAAC,OAAO,GAAG;MAChBC,OAAO,EAAE,IAAIL,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;IAEgB,KAAAM,OAAO,GAAU,uBAAuB;EACjB;EAExC;EACAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAU,IAAI,CAACF,OAAO,GAAE,YAAY,EAAE,IAAI,CAACF,OAAO,CAAC;EACzE;EAEA;EACAK,mBAAmBA,CAACC,KAAa;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAU,IAAI,CAACF,OAAO,GAAG,IAAI,GAAGI,KAAK,CAAC;EAC5D;EAEA;EACAC,eAAeA,CAACC,KAAa;IAC3B,OAAO,IAAI,CAACT,IAAI,CAACK,GAAG,CAAQ,IAAI,CAACF,OAAO,GAAG,IAAI,GAAGM,KAAK,CAAC;EAC1D;EAEA;EACAC,WAAWA,CAACC,KAAY;IACtB,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAC,IAAI,CAACT,OAAO,GAAG,YAAY,EAAEQ,KAAK,EAAE,IAAI,CAACV,OAAO,CAAC;EACzE;;AA3BWH,YAAY,C;mBAAZA,YAAY,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZlB,YAAY,C;SAAZA,YAAY;EAAAmB,OAAA,EAAZnB,YAAY,CAAAoB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}