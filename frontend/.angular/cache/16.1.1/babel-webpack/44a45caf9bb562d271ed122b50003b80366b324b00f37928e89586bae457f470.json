{"ast":null,"code":"import { cart } from '../models/cart';\nimport { BehaviorSubject } from 'rxjs';\nimport { cartItem } from '../models/cartItem';\nimport * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    //Attributes\n    this.cart = this.getCartFromLocalStorage();\n    this.cartSubject = new BehaviorSubject(this.cart);\n  }\n  //Add movie to cart\n  addToCart(movie) {\n    //check cartItem doesnt already exist in cart\n    this.cartItm = this.cart.items.find(item => item.movie._id === movie._id);\n    if (this.cartItm) {\n      return;\n    }\n    //save item to cart\n    this.cart.items.push(new cartItem(movie));\n    //save cart to localstorage\n    this.storeCartToLocalStorage();\n  }\n  //remove movie from cart\n  removeFromCart(movieId) {\n    this.cart.items = this.cart.items.filter(item => item.movie._id != movieId);\n    //Save cart to localStorage\n    this.storeCartToLocalStorage();\n  }\n  //Clear cart items\n  clearCart() {\n    //set cart to new cart\n    this.cart = new cart();\n    //Save cart to localStorage\n    this.storeCartToLocalStorage();\n  }\n  //cart observable method\n  getCartObservable() {\n    return this.cartSubject.asObservable();\n  }\n  //Store cart in localStorage\n  storeCartToLocalStorage() {\n    //set cart totalPrice attribute\n    this.cart.totalPrice = this.cart.items.reduce((preSum, currentItem) => preSum + currentItem.price, 0);\n    //Set cart totalCount attribute\n    this.cart.totalCount = this.cart.items.reduce((preSum, currentItem) => preSum + currentItem.quantity, 0);\n    //convert cart object to json string\n    const cartJson = JSON.stringify(this.cart);\n    //Store json string representing cart to local storage\n    localStorage.setItem('cart', cartJson);\n    //update cartSubject listerners\n    this.cartSubject.next(this.cart);\n  }\n  //Retrieve cart from localStorage\n  getCartFromLocalStorage() {\n    //set cartJson to localStorage item 'cart'\n    const cartJson = localStorage.getItem('cart');\n    return cartJson ? JSON.parse(cartJson) : new cart();\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)();\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["cart","BehaviorSubject","cartItem","CartService","constructor","getCartFromLocalStorage","cartSubject","addToCart","movie","cartItm","items","find","item","_id","push","storeCartToLocalStorage","removeFromCart","movieId","filter","clearCart","getCartObservable","asObservable","totalPrice","reduce","preSum","currentItem","price","totalCount","quantity","cartJson","JSON","stringify","localStorage","setItem","next","getItem","parse","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Georgie\\Desktop\\DevelopmentProjects\\FullStack\\MEAN\\movie4you\\frontend\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { cart } from '../models/cart';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Movie } from '../models/movie';\nimport { cartItem} from '../models/cartItem';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  //Attributes\n  private cart: cart = this.getCartFromLocalStorage();\n  private cartSubject: BehaviorSubject<cart> = new BehaviorSubject(this.cart);\n  private cartItm?:  cartItem;\n\n  constructor() { }\n\n  //Add movie to cart\n  addToCart(movie: Movie){\n    //check cartItem doesnt already exist in cart\n    this.cartItm = this.cart.items\n    .find(item => item.movie._id === movie._id);\n    if(this.cartItm){\n        return;\n    }\n\n    //save item to cart\n    this.cart.items.push(new cartItem(movie));\n\n    //save cart to localstorage\n    this.storeCartToLocalStorage();\n  }\n\n  //remove movie from cart\n  removeFromCart(movieId: string): void{\n    this.cart.items = this.cart.items.filter(\n      item => item.movie._id != movieId\n    );\n\n    //Save cart to localStorage\n    this.storeCartToLocalStorage();\n  }\n\n  //Clear cart items\n  clearCart(){\n    //set cart to new cart\n    this.cart = new cart();\n\n    //Save cart to localStorage\n    this.storeCartToLocalStorage();\n  }\n\n  //cart observable method\n  getCartObservable(): Observable<cart>{\n    return this.cartSubject.asObservable();\n  }\n\n  //Store cart in localStorage\n  private storeCartToLocalStorage(): void{\n\n    //set cart totalPrice attribute\n    this.cart.totalPrice = this.cart.items.reduce(\n      (preSum, currentItem) => preSum + currentItem.price, 0\n    );\n\n    //Set cart totalCount attribute\n    this.cart.totalCount = this.cart.items.reduce(\n      (preSum, currentItem) => preSum + currentItem.quantity, 0\n    );\n\n    //convert cart object to json string\n    const cartJson = JSON.stringify(this.cart);\n\n    //Store json string representing cart to local storage\n    localStorage.setItem('cart', cartJson);\n\n    //update cartSubject listerners\n    this.cartSubject.next(this.cart);\n\n  }\n\n  //Retrieve cart from localStorage\n  private getCartFromLocalStorage(): cart{\n\n    //set cartJson to localStorage item 'cart'\n    const cartJson = localStorage.getItem('cart');\n\n    return cartJson ? JSON.parse(cartJson): new cart();\n\n  }\n\n\n\n}\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,gBAAgB;AACrC,SAASC,eAAe,QAAoB,MAAM;AAElD,SAASC,QAAQ,QAAO,oBAAoB;;AAK5C,OAAM,MAAOC,WAAW;EAOtBC,YAAA;IALA;IACQ,KAAAJ,IAAI,GAAS,IAAI,CAACK,uBAAuB,EAAE;IAC3C,KAAAC,WAAW,GAA0B,IAAIL,eAAe,CAAC,IAAI,CAACD,IAAI,CAAC;EAG3D;EAEhB;EACAO,SAASA,CAACC,KAAY;IACpB;IACA,IAAI,CAACC,OAAO,GAAG,IAAI,CAACT,IAAI,CAACU,KAAK,CAC7BC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,KAAK,CAACK,GAAG,KAAKL,KAAK,CAACK,GAAG,CAAC;IAC3C,IAAG,IAAI,CAACJ,OAAO,EAAC;MACZ;;IAGJ;IACA,IAAI,CAACT,IAAI,CAACU,KAAK,CAACI,IAAI,CAAC,IAAIZ,QAAQ,CAACM,KAAK,CAAC,CAAC;IAEzC;IACA,IAAI,CAACO,uBAAuB,EAAE;EAChC;EAEA;EACAC,cAAcA,CAACC,OAAe;IAC5B,IAAI,CAACjB,IAAI,CAACU,KAAK,GAAG,IAAI,CAACV,IAAI,CAACU,KAAK,CAACQ,MAAM,CACtCN,IAAI,IAAIA,IAAI,CAACJ,KAAK,CAACK,GAAG,IAAII,OAAO,CAClC;IAED;IACA,IAAI,CAACF,uBAAuB,EAAE;EAChC;EAEA;EACAI,SAASA,CAAA;IACP;IACA,IAAI,CAACnB,IAAI,GAAG,IAAIA,IAAI,EAAE;IAEtB;IACA,IAAI,CAACe,uBAAuB,EAAE;EAChC;EAEA;EACAK,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACd,WAAW,CAACe,YAAY,EAAE;EACxC;EAEA;EACQN,uBAAuBA,CAAA;IAE7B;IACA,IAAI,CAACf,IAAI,CAACsB,UAAU,GAAG,IAAI,CAACtB,IAAI,CAACU,KAAK,CAACa,MAAM,CAC3C,CAACC,MAAM,EAAEC,WAAW,KAAKD,MAAM,GAAGC,WAAW,CAACC,KAAK,EAAE,CAAC,CACvD;IAED;IACA,IAAI,CAAC1B,IAAI,CAAC2B,UAAU,GAAG,IAAI,CAAC3B,IAAI,CAACU,KAAK,CAACa,MAAM,CAC3C,CAACC,MAAM,EAAEC,WAAW,KAAKD,MAAM,GAAGC,WAAW,CAACG,QAAQ,EAAE,CAAC,CAC1D;IAED;IACA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC/B,IAAI,CAAC;IAE1C;IACAgC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEJ,QAAQ,CAAC;IAEtC;IACA,IAAI,CAACvB,WAAW,CAAC4B,IAAI,CAAC,IAAI,CAAClC,IAAI,CAAC;EAElC;EAEA;EACQK,uBAAuBA,CAAA;IAE7B;IACA,MAAMwB,QAAQ,GAAGG,YAAY,CAACG,OAAO,CAAC,MAAM,CAAC;IAE7C,OAAON,QAAQ,GAAGC,IAAI,CAACM,KAAK,CAACP,QAAQ,CAAC,GAAE,IAAI7B,IAAI,EAAE;EAEpD;;AAjFWG,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAkC,OAAA,EAAXlC,WAAW,CAAAmC,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}